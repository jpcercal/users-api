openapi: 3.0.3
info:
  title: users-api
  description: This is a service to create and list users through a REST API.
  contact:
    name: João Paulo Cercal
    email: jpcercal@gmail.com
  version: 1.0.0
tags:
  - name: user
    description: Operations about user
paths:
  /users:
    get:
      tags:
        - user
      summary: List all users
      description: Returns all users from the system
      operationId: listUsers
      parameters:
        - name: created
          in: query
          description: Order by the time that the user was created
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollection'
        '400':
          description: Invalid query parameter supplied'
        '500':
          description: Internal server error'
    post:
      tags:
        - user
      summary: Create user
      description: Creates a new user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid user data supplied
        '409':
          description: User already exists
        '500':
          description: Internal server error

components:
  schemas:
    User:
      type: object
      description: User object
      additionalProperties: false
      required:
        - id
        - name
        - email
        - created
      properties:
        id:
          type: integer
          format: int64
          example: 1
          nullable: false
          minimum: 1
          readOnly: true
        name:
          type: string
          example: João Paulo Cercal
          nullable: false
          minLength: 2
          maxLength: 200
        email:
          type: string
          format: email
          example: jpcercal@gmail.com
          nullable: false
          minLength: 3
          maxLength: 200
        created:
          type: string
          format: date-time
          example: 2024-02-01T09:51:07.164Z
          nullable: false
          readOnly: true
    UserCollection:
      type: object
      description: List of users
      additionalProperties: false
      nullable: false
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
